services:

  db:
    image: postgres:17
    container_name: database
    environment:
      - POSTGRES_USER=architechs
      - POSTGRES_PASSWORD=password_super_sicura
      - POSTGRES_DB=coordinateDB
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-data.sql:/docker-entrypoint-initdb.d/init-data.sql

  test:
    image: maven:3.9.9-eclipse-temurin-23-alpine
    container_name: tester
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock  # Concede accesso al daemon Docker
    working_dir: /app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/coordinateDB
      SPRING_DATASOURCE_USERNAME: architechs
      SPRING_DATASOURCE_PASSWORD: password_super_sicura
      TESTCONTAINERS_HOST_OVERRIDE: host.docker.internal


    command: >
      sh -c "
        echo 'Running tests...';
        mvn clean test && echo 'Tests PASSED! Building JAR...'
      "


  # APPLICAZIONE (Spring Boot runtime)
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: app-backend
    depends_on:
      - db
      - test
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/coordinateDB
      SPRING_DATASOURCE_USERNAME: architechs
      SPRING_DATASOURCE_PASSWORD: password_super_sicura
  frontend:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: app-frontend
    ports:
      - "5173:4173" 
    depends_on:
      - app
    environment:
      PORT: 4173
volumes:
  postgres_data: