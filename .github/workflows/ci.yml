name: CI Pipeline

on:
  push:
    branches:
      - main
      - CI
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: architechs
          POSTGRES_PASSWORD: password_super_sicura
          POSTGRES_DB: coordinateDB
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U architechs"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java 23
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "23"
          cache: maven

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            nc -z localhost 5432 && echo "Postgres is up" && exit 0
            echo "Waiting for Postgres..."
            sleep 2
          done
          echo "Postgres failed to start" && exit 1

      - name: Run backend tests and collect coverage
        working-directory: backend
        run: mvn clean verify
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/coordinateDB
          SPRING_DATASOURCE_USERNAME: architechs
          SPRING_DATASOURCE_PASSWORD: password_super_sicura

      - name: Upload backend code coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: backend/target/site/jacoco/

  frontend-tests:
    runs-on: ubuntu-latest
    needs: backend-tests # Il frontend parte solo se il backend ha successo

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: app/package-lock.json

      - name: Install dependencies
        working-directory: app
        run: npm ci

      - name: Run frontend tests
        working-directory: app
        run: npm run coverage

      - name: Upload frontend code coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: app/coverage/
